{"version":3,"file":"static/js/990.a955ae4a.chunk.js","mappings":"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","sources":["features/products/ProductDetailModal.tsx","hooks/useAppDispatch.ts","components/ProductCard.tsx","features/products/ProductGrid.tsx","features/products/ProductList.tsx","hooks/useProducts.ts"],"sourcesContent":["// src/features/products/ProductDetailModal.tsx\r\nimport React from 'react'\r\nimport type { Product } from './productSlice'\r\n\r\ninterface Props {\r\n  product: Product\r\n  onClose: () => void\r\n}\r\n\r\nconst formatter = new Intl.NumberFormat('es-CO', {\r\n  style: 'currency',\r\n  currency: 'COP',\r\n  minimumFractionDigits: 2,\r\n})\r\n\r\nconst ProductDetailModal: React.FC<Props> = ({ product, onClose }) => (\r\n  <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\r\n    <div className=\"bg-white rounded-2xl shadow-xl p-4 sm:p-6 w-full max-w-lg max-h-full overflow-y-auto relative\">\r\n      <button\r\n        onClick={onClose}\r\n        className=\"absolute top-3 right-3 text-gray-500 hover:text-gray-800 focus:outline-none\"\r\n        aria-label=\"Cerrar\"\r\n      >\r\n        âœ•\r\n      </button>\r\n\r\n      <div className=\"w-full mb-4\">\r\n        <img\r\n          src={product.imageUrl ?? '/placeholder.png'}\r\n          alt={product.name}\r\n          className=\"w-full h-auto max-h-56 sm:max-h-64 object-contain rounded-lg mx-auto\"\r\n          loading=\"lazy\"\r\n        />\r\n      </div>\r\n\r\n      <h2 className=\"text-xl sm:text-2xl font-bold text-gray-800 mb-2\">{product.name}</h2>\r\n\r\n      <p className=\"text-gray-700 mb-4 text-sm sm:text-base\">{product.description}</p>\r\n\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <span className=\"text-lg sm:text-xl font-semibold text-green-600\">\r\n          {formatter.format(product.price)}\r\n        </span>\r\n        <span className=\"text-sm sm:text-base text-gray-500\">Stock: {product.stock}</span>\r\n      </div>\r\n\r\n      <button\r\n        onClick={onClose}\r\n        className=\"w-full py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none transition\"\r\n      >\r\n        Cerrar\r\n      </button>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default ProductDetailModal\r\n","import { useDispatch } from 'react-redux';\r\nimport type { AppDispatch } from '../app/store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import React, { ChangeEvent } from 'react'\r\nimport type { Product } from '../features/products/productSlice'\r\n\r\ninterface Props {\r\n  product: Product\r\n  quantity: number\r\n  onQuantityChange: (id: string, value: number) => void\r\n  onAdd: (product: Product) => void\r\n  onSelect: () => void\r\n}\r\n\r\nconst formatter = new Intl.NumberFormat('es-CO', {\r\n  style: 'currency',\r\n  currency: 'COP',\r\n  minimumFractionDigits: 2,\r\n})\r\n\r\nexport const ProductCard: React.FC<Props> = React.memo(({ product, quantity, onQuantityChange, onAdd, onSelect }) => (\r\n  <div\r\n    role=\"button\"\r\n    onClick={onSelect}\r\n    className=\"bg-white rounded-2xl shadow hover:shadow-xl transform hover:-translate-y-1 transition cursor-pointer overflow-hidden flex flex-col min-h-[420px]\"\r\n  >\r\n    <div className=\"w-full h-48 flex items-center justify-center bg-white border-b\">\r\n      <img\r\n        src={product.imageUrl || '/placeholder.png'}\r\n        alt={product.name}\r\n        loading=\"lazy\"\r\n        className=\"max-h-full max-w-full object-contain\"\r\n      />\r\n    </div>\r\n    <div className=\"p-4 flex flex-col flex-1 justify-between\">\r\n      <div>\r\n        <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">{product.name}</h2>\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <span className=\"text-green-600 text-lg font-bold\">{formatter.format(product.price)}</span>\r\n          <span className=\"text-gray-500 text-sm\">Stock: {product.stock}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex items-center gap-2 mt-auto\">\r\n        <input\r\n          type=\"number\"\r\n          min={1}\r\n          max={product.stock}\r\n          value={quantity}\r\n          onClick={e => e.stopPropagation()}\r\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n            e.stopPropagation()\r\n            onQuantityChange(product.id, parseInt(e.target.value, 10))\r\n          }}\r\n          className=\"w-16 px-2 py-1 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300\"\r\n        />\r\n        <button\r\n          onClick={e => { e.stopPropagation(); onAdd(product) }}\r\n          disabled={product.stock === 0}\r\n          className={`px-4 py-2 rounded-lg font-medium transition ${\r\n            product.stock === 0\r\n              ? 'bg-gray-300 text-gray-600 cursor-not-allowed'\r\n              : 'bg-blue-600 text-white hover:bg-blue-700'\r\n          }`}\r\n        >\r\n          {product.stock === 0 ? 'Agotado' : 'Agregar'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n))","import React from 'react'\r\nimport type { Product } from './productSlice'\r\nimport { ProductCard } from '../../components/ProductCard'\r\n\r\ninterface Props {\r\n  products: Product[]\r\n  quantities: Record<string, number>\r\n  onQuantityChange: (id: string, value: number) => void\r\n  onAdd: (product: Product) => void\r\n  onSelect: (product: Product) => void\r\n}\r\n\r\nexport const ProductGrid: React.FC<Props> = ({ products, quantities, onQuantityChange, onAdd, onSelect }) => (\r\n  <div className=\"grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\r\n    {products.map(product => (\r\n      <ProductCard\r\n        key={product.id}\r\n        product={product}\r\n        quantity={quantities[product.id] || 1}\r\n        onQuantityChange={onQuantityChange}\r\n        onAdd={onAdd}\r\n        onSelect={() => onSelect(product)}\r\n      />\r\n    ))}\r\n  </div>\r\n)\r\n","// src/features/products/ProductList.tsx\r\nimport React, { useState } from 'react'\r\nimport { useAppDispatch } from '../../hooks/useAppDispatch'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport type { RootState } from '../../app/store'\r\nimport { useProducts } from '../../hooks/useProducts'\r\nimport { addToCart } from '../cart/cartSlice'\r\nimport { updateStock, Product } from './productSlice'\r\nimport ProductDetailModal from './ProductDetailModal'\r\nimport { ProductGrid } from './ProductGrid'\r\n\r\nconst ProductList: React.FC = () => {\r\n  const dispatch = useAppDispatch()\r\n  const navigate = useNavigate()\r\n  const cartCount = useSelector((state: RootState) => state.cart.items.length)\r\n  const { items: products, loading, error } = useProducts()\r\n  const [quantities, setQuantities] = useState<Record<string, number>>({})\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null)\r\n\r\n  const onQuantityChange = (id: string, value: number) => {\r\n    const max = products.find(p => p.id === id)?.stock ?? 1\r\n    const qty = Math.max(1, Math.min(value, max))\r\n    setQuantities(prev => ({ ...prev, [id]: qty }))\r\n  }\r\n\r\n  const onAdd = (product: Product) => {\r\n    const qty = quantities[product.id] || 1\r\n    dispatch(addToCart({ productId: product.id, quantity: qty }))\r\n    dispatch(updateStock({ productId: product.id, quantity: qty }))\r\n  }\r\n\r\n  return (\r\n    <section className=\"flex flex-col flex-grow px-4 sm:px-6 lg:px-8 pt-8 pb-20 lg:pt-8 lg:pb-8\">\r\n      <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">Nuestros Productos</h1>\r\n\r\n      {loading && (\r\n        <div className=\"grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\r\n          {Array.from({ length: 8 }).map((_, i) => (\r\n            <div key={i} className=\"animate-pulse\">\r\n              <div className=\"h-48 bg-gray-200 mb-4 rounded\" />\r\n              <div className=\"h-6 bg-gray-200 mb-2 rounded w-3/4\" />\r\n              <div className=\"h-6 bg-gray-200 rounded w-1/2\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {error && <p className=\"text-center text-red-500 mt-4\">{error}</p>}\r\n\r\n      {!loading && !error && (\r\n        <ProductGrid\r\n          products={products}\r\n          quantities={quantities}\r\n          onQuantityChange={onQuantityChange}\r\n          onAdd={onAdd}\r\n          onSelect={setSelectedProduct}\r\n        />\r\n      )}\r\n\r\n      {selectedProduct && (\r\n        <ProductDetailModal\r\n          product={selectedProduct}\r\n          onClose={() => setSelectedProduct(null)}\r\n        />\r\n      )}\r\n\r\n      {/* Banner fijo en mÃ³vil para ir al checkout */}\r\n      {cartCount > 0 && (\r\n        <div className=\"lg:hidden fixed bottom-0 left-0 w-full bg-white border-t p-4 flex justify-between items-center shadow-lg\">\r\n          <span className=\"font-medium\">\r\n            {cartCount} {cartCount > 1 ? 'artÃ­culos' : 'artÃ­culo'} en tu carrito\r\n          </span>\r\n          <button\r\n            onClick={() => navigate('/checkout')}\r\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            Ir a pagar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ProductList\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport type { RootState } from '../app/store'\r\nimport { useAppDispatch } from './useAppDispatch'\r\nimport { loadProducts } from '../features/products/productSlice'\r\n\r\nexport function useProducts() {\r\n  const dispatch = useAppDispatch()\r\n  const { items, loading, error } = useSelector((state: RootState) => state.products)\r\n  useEffect(() => {\r\n    dispatch(loadProducts())\r\n  }, [dispatch])\r\n  return { items, loading, error }\r\n}\r\n"],"names":["formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","_ref","_product$imageUrl","product","onClose","_jsx","className","children","_jsxs","onClick","src","imageUrl","alt","name","loading","description","format","price","stock","useAppDispatch","useDispatch","ProductCard","React","quantity","onQuantityChange","onAdd","onSelect","role","type","min","max","value","e","stopPropagation","onChange","id","parseInt","target","disabled","concat","ProductGrid","products","quantities","map","ProductList","dispatch","navigate","useNavigate","cartCount","useSelector","state","cart","items","length","error","useEffect","loadProducts","useProducts","setQuantities","useState","selectedProduct","setSelectedProduct","Array","from","_","i","_products$find$stock","_products$find","find","p","qty","Math","prev","_objectSpread","addToCart","productId","updateStock","ProductDetailModal"],"sourceRoot":""}